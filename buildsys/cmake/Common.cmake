CMAKE_MINIMUM_REQUIRED(VERSION 3.9 FATAL_ERROR)

SET(CMAKE_DEBUG_POSTFIX "_d" CACHE STRING "Add a postfix, usually _d on windows")
SET(CMAKE_RELEASE_POSTFIX "" CACHE STRING "Add a postfix, usually empty on windows")
SET(CMAKE_RELWITHDEBINFO_POSTFIX "" CACHE STRING "Add a postfix, usually empty on windows")
SET(CMAKE_MINSIZEREL_POSTFIX "" CACHE STRING "Add a postfix, usually empty on windows")


FUNCTION(ADD_POST_BUILD TARGET_NAME SUBFOLDER)
	IF(SUBFOLDER STREQUAL "")
		SET(TARGET_FOLDER ${LOO_BIN_DIR})
	ELSE()
		SET(TARGET_FOLDER ${LOO_BIN_DIR}/${SUBFOLDER})
	ENDIF()

	ADD_CUSTOM_COMMAND(TARGET ${TARGET_NAME}
		POST_BUILD
		COMMAND ${CMAKE_COMMAND} -E copy_if_different $<TARGET_FILE_DIR:${TARGET_NAME}>/$<TARGET_FILE_NAME:${TARGET_NAME}> ${TARGET_FOLDER})
ENDFUNCTION()


FUNCTION(DOWNLOAD_FILE RELATIVE_PATH COMMIT_ID FILE_ID)
	SET(DEST ${LOO_ROOT_DIR}/${RELATIVE_PATH})
	SET(REDOWNLOAD FALSE)
	IF(EXISTS ${DEST})
	ELSE()
		SET(REDOWNLOAD TRUE)
	ENDIF()
	IF(REDOWNLOAD)
	#https://raw.githubusercontent.com/ifeuille/loodependencies/master/README.md
		SET(URL "https://raw.githubusercontent.com/ifeuille/loodependencies/${COMMIT_ID}/${RELATIVE_PATH}")
		MESSAGE(STATUS "Downloading ${URL}...")
		FILE(DOWNLOAD ${URL} ${DEST} SHOW_PROGRESS EXPECTED_HASH SHA1=${FILE_ID} STATUS ERR)
		LIST(GET ERR 0 ERR_CODE)
		IF(ERR_CODE)
			FILE(REMOVE ${DEST})
			LIST(GET ERR 1 ERR_MSG)
			MESSAGE(FATAL_ERROR "Failed to download file ${URL}: ${ERR_MSG}")
		ENDIF()
	ENDIF()
	SET(${ARGV3} ${REDOWNLOAD} PARENT_SCOPE)
ENDFUNCTION()

FUNCTION(DECL_GENFILES parentpath)
	set(GEN_PRIVATE_HEADERS "")
	set(GEN_HEADERS "")
	FOREACH(filename ${REFLECT_FILE_LIST})
		set(GEN_HEADERS ${GEN_HEADERS} "${filename}.loo.h")
		set(GEN_PRIVATE_HEADERS ${GEN_PRIVATE_HEADERS} "${filename}.looprivate.h")
	ENDFOREACH(filename)
	source_group("${parentpath}\\generate" FILES ${GEN_PRIVATE_HEADERS})
	set(SOURCE_PUBLIC ${SOURCE_PUBLIC} ${GEN_HEADERS} ${GEN_PRIVATE_HEADERS})
ENDFUNCTION()


FUNCTION(DOWNLOAD_DEPENDENCY RELATIVE_PATH FILE_ID)
	SET(DEST ${LOO_ROOT_DIR}/${RELATIVE_PATH})
	SET(REDOWNLOAD FALSE)
	IF(EXISTS ${DEST})
		FILE(SHA1 ${DEST} FILE_SHA1)
		STRING(TOLOWER "${FILE_SHA1}" FILE_SHA1)
		STRING(TOLOWER "${FILE_ID}" FILE_ID)
		IF(NOT "${FILE_SHA1}" STREQUAL ${FILE_ID})
			SET(REDOWNLOAD TRUE)
		ENDIF()
	ELSE()
		SET(REDOWNLOAD TRUE)
	ENDIF()
	IF(REDOWNLOAD)
		IF("$ENV{USE_LOCAL_DEPENDENCIES}" STREQUAL "1")
			SET(DEPENDENCIES_REPO_PATH "$ENV{DEPENDENCIES_REPO_PATH}")
			SET(RECLONE FALSE)
			IF(NOT EXISTS ${DEPENDENCIES_REPO_PATH})
				SET(RECLONE TRUE)
			ELSE()
				EXECUTE_PROCESS(COMMAND git fetch -q WORKING_DIRECTORY ${DEPENDENCIES_REPO_PATH} RESULT_VARIABLE FETCH_ERR)
				IF(FETCH_ERR)
					SET(RECLONE TRUE)
				ENDIF()
			ENDIF()
			IF(RECLONE)
				MESSAGE(STATUS "Cloning dependencies repository...")
				SET(GIT_CLONE "git clone https://github.com/gongminmin/KlayGEDependencies.git ${DEPENDENCIES_REPO_PATH}")
				MESSAGE(STATUS "${GIT_CLONE}")
				EXECUTE_PROCESS(COMMAND ${GIT_CLONE})
			ENDIF()
			EXECUTE_PROCESS(COMMAND git checkout ${DEPENDENCIES_COMMIT_ID} -f -q WORKING_DIRECTORY ${DEPENDENCIES_REPO_PATH})
			EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E copy ${DEPENDENCIES_REPO_PATH}/${RELATIVE_PATH} ${DEST})
		ELSE()
			SET(URL "https://raw.githubusercontent.com/gongminmin/KlayGEDependencies/${DEPENDENCIES_COMMIT_ID}/${RELATIVE_PATH}")
			MESSAGE(STATUS "Downloading ${URL}...")
			FILE(DOWNLOAD ${URL} ${DEST} EXPECTED_HASH SHA1=${FILE_ID} STATUS ERR)
			LIST(GET ERR 0 ERR_CODE)
			IF(ERR_CODE)
				FILE(REMOVE ${DEST})
				LIST(GET ERR 1 ERR_MSG)
				MESSAGE(FATAL_ERROR "Failed to download file ${URL}: ${ERR_MSG}")
			ENDIF()
		ENDIF()
	ENDIF()
	SET(${ARGV3} ${REDOWNLOAD} PARENT_SCOPE)
ENDFUNCTION()
