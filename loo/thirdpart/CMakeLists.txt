PROJECT(thirdpart)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.6)

SET(SEVENZIP_MAJOR_VERSION 9)
SET(SEVENZIP_MINOR_VERSION 20)
SET(SEVENZIP_VERSION ${SEVENZIP_MAJOR_VERSION}.${SEVENZIP_MINOR_VERSION})

SET(LOO_ROOT_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../")
set(LOO_PROJECT_DIR "${LOO_ROOT_DIR}/../")
INCLUDE(${LOO_PROJECT_DIR}/buildsys/cmake/Common.cmake)
INCLUDE(${LOO_PROJECT_DIR}/buildsys/cmake/Platform.cmake)
INCLUDE(${LOO_PROJECT_DIR}/buildsys/cmake/Compiler.cmake)
#INCLUDE(${LEngine_ROOT_DIR}/External/Build/CMake/ExternalCommon.cmake)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

set(LOO_OUTPUT_DIR "${LOO_PROJECT_DIR}/binary/libs/${LOO_PLATFORM_NAME}")
set(LOO_BIN_DIR "${LOO_PROJECT_DIR}/binary/bin/${LOO_PLATFORM_NAME}")

#SET(SEVENZIP_OUTPUT_DIR "${SEVENZIP_PROJECT_DIR}/lib/${LEngine_PLATFORM_NAME}")
#SET(REL_PATH "External/Downloads/7z${SEVENZIP_MAJOR_VERSION}${SEVENZIP_MINOR_VERSION}.patched.7z")
#SET(SEVENZIP_PATH "${LEngine_ROOT_DIR}/External/Downloads/${LEngine_HOST_PLATFORM_NAME}/7z")
#SET(PACKAGE_COMMIT_ID "093760c4639e01fe3c2fe27d7050b8ed0d6c9362")
#SET(PACKAGE_FILE_ID "d11081ef3d31e87370d40b12f1a297823c3e4f58")

#DOWNLOAD_PACKAGE("7z" ${REL_PATH} ${PACKAGE_COMMIT_ID} ${PACKAGE_FILE_ID} "DOC/readme.txt")

FOREACH(flag_var
		CMAKE_C_FLAGS CMAKE_CXX_FLAGS)
	IF(LOO_COMPILER_MSVC)
		STRING(REPLACE "/W4" "/W3" ${flag_var} "${${flag_var}}")
		STRING(REPLACE "/WX" "/WX-" ${flag_var} "${${flag_var}}")
	ELSE()
		STRING(REPLACE "-Werror" "-Wno-error" ${flag_var} "${${flag_var}}")
	ENDIF()
ENDFOREACH()

ADD_SUBDIRECTORY(7z)
if (NOT CMAKE_VERSION VERSION_LESS 3.11.0)
	include(FetchContent)
	#set( FETCHCONTENT_FULLY_DISCONNECTED ON CACHE BOOL "don't download externals" )
	set( FETCHCONTENT_UPDATES_DISCONNECTED ON CACHE BOOL "don't update externals" )
	mark_as_advanced( FETCHCONTENT_BASE_DIR FETCHCONTENT_FULLY_DISCONNECTED )
	mark_as_advanced( FETCHCONTENT_QUIET FETCHCONTENT_UPDATES_DISCONNECTED )
endif ()
# prepare for external projects
if (TRUE)
	include( ExternalProject )
	message("pre =${CMAKE_CONFIGURATION_TYPES}")
	#set( LOO_LIST_SEPARATOR "|" )
	#string( REPLACE ";" "${LOO_LIST_SEPARATOR}" LOO_EXTERNAL_CONFIGURATION_TYPES "${CMAKE_CONFIGURATION_TYPES}" )
	set(LOO_EXTERNAL_CONFIGURATION_TYPES "${CMAKE_CONFIGURATION_TYPES}")
	set( LOO_BUILD_TARGET_FLAGS 	"-DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}"
								"-DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}"
								"-DCMAKE_C_FLAGS=${CMAKE_C_FLAGS}"
								"-DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}"
								"-DCMAKE_EXE_LINKER_FLAGS=${CMAKE_EXE_LINKER_FLAGS}"
								"-DCMAKE_STATIC_LINKER_FLAGS=${CMAKE_STATIC_LINKER_FLAGS}"
								"-DCMAKE_SHARED_LINKER_FLAGS=${CMAKE_SHARED_LINKER_FLAGS}" )

	foreach ( CONFIG ${CMAKE_CONFIGURATION_TYPES} )
		string( TOUPPER ${CONFIG} OUT_CONFIG )

		set( LOO_BUILD_TARGET_FLAGS
			"${LOO_BUILD_TARGET_FLAGS}"
			"-DCMAKE_C_FLAGS_${OUT_CONFIG}=${CMAKE_C_FLAGS_${OUT_CONFIG}}"
			"-DCMAKE_CXX_FLAGS_${OUT_CONFIG}=${CMAKE_CXX_FLAGS_${OUT_CONFIG}}"
			"-DCMAKE_EXE_LINKER_FLAGS_${OUT_CONFIG}=${CMAKE_EXE_LINKER_FLAGS_${OUT_CONFIG}}"
			"-DCMAKE_STATIC_LINKER_FLAGS_${OUT_CONFIG}=${CMAKE_STATIC_LINKER_FLAGS_${OUT_CONFIG}}"
			"-DCMAKE_SHARED_LINKER_FLAGS_${OUT_CONFIG}=${CMAKE_SHARED_LINKER_FLAGS_${OUT_CONFIG}}" )
	endforeach ()
	#message("LOO_BUILD_TARGET_FLAGS=${LOO_BUILD_TARGET_FLAGS}")
	message("after =${CMAKE_CONFIGURATION_TYPES}")
endif ()


INCLUDE(${LOO_PROJECT_DIR}/buildsys/cmake/download_vk.cmake)
INCLUDE(${LOO_PROJECT_DIR}/buildsys/cmake/download_glslang.cmake)
# add_subdirectory(glsl_trace)
# add_subdirectory(pipeline_compiler)

SET_TARGET_PROPERTIES(7zxa PROPERTIES FOLDER "thirdpart/7z")
SET_TARGET_PROPERTIES(LZMA PROPERTIES FOLDER "thirdpart/7z")

IF(LOO_PLATFORM_ANDROID)
	# native_app_glue
	if(TRUE)
		add_subdirectory(android_native_app_glue)
	elseif()
		set(NATIVE_APP_GLUE_DIR "${CMAKE_ANDROID_NDK}/sources/android/native_app_glue")
		file(GLOB NATIVE_APP_GLUE_FILES "${NATIVE_APP_GLUE_DIR}/*.c" "${NATIVE_APP_GLUE_DIR}/*.h")
		add_library(native_app_glue STATIC ${NATIVE_APP_GLUE_FILES})
		target_include_directories(native_app_glue PUBLIC ${NATIVE_APP_GLUE_DIR})
		set_property(TARGET native_app_glue PROPERTY FOLDER "thirdpart")
		set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -u ANativeActivity_onCreate")
	endif()
ENDIF()

